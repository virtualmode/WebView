@namespace WebView.Lists
@inherits BaseComponent
@typeparam TItem

<div role="columnheader"
     aria-sort=@(Column!.IsSorted ? (Column.IsSortedDescending ? "descending" : "ascending"): "none")
     aria-colindex=@ColumnIndex
     class=@($"ms-DetailsColumn{(Column.ColumnActionsMode != ColumnActionsMode.Disabled ? " is-actionable" : "")}{(string.IsNullOrEmpty(Column.Name) ? " is-empty" : "")}{(Column.IsPadded ? " is-padded" : "")}{(Column.IsIconOnly ? " is-iconOnly" : "")}")
     data-is-draggable=@IsDraggable
     draggable=@IsDraggable
     style=@($"width:{(Column.CalculatedWidth + DetailsRow<TItem>.CELL_LEFT_PADDING + DetailsRow<TItem>.CELL_RIGHT_PADDING + (Column.IsPadded ? DetailsRow<TItem>.CELL_EXTRA_RIGHT_PADDING : 0))}px;")>
    @if (IsDraggable)
    {
        <Icon IconName="GripperBarVertical" ClassName="ms-DetailsColumn-gripperBar" />
    }
    @if (ColumnHeaderTooltipTemplate != null)
    {
        @ColumnHeaderTooltipTemplate
    }
    else
    {
        <span class="ms-DetailsColumn-cellTooltip">
            <span id=@($"{ParentId}-{Column.Key}")
                  aria-label=@(Column.IsIconOnly ? Column.Name : null)
                  aria-labelledby=@(Column.IsIconOnly ? null : $"{ParentId}-{Column.Key}-name")
                  class="ms-DetailsColumn-cellTitle"
                  data-is-focusable=@(Column.ColumnActionsMode != ColumnActionsMode.Disabled)
                  role=@(Column.ColumnActionsMode != ColumnActionsMode.Disabled &&
                             (Column.OnColumnClick!= null || OnColumnClick.HasDelegate)
                             ? "button" : null)
                  aria-describedby=@(ColumnHeaderTooltipTemplate != null && HasAccessibleLabel() ? $"{ParentId}-{Column.Key}" : null)
                  @oncontextmenu=@(()=> OnColumnContextMenu.InvokeAsync(Column))
                  @onclick=@HandleColumnClick
                  aria-haspopup=@(Column.ColumnActionsMode == ColumnActionsMode.HasDropdown)
                  aria-expanded=@(Column.ColumnActionsMode == ColumnActionsMode.HasDropdown ? Column.IsMenuOpen : false)>
                <span id=@($"{ParentId}-{Column.Key}-name")
                      class="ms-DetailsColumn-cellName">
                    @if (!string.IsNullOrEmpty(Column.IconName) || !string.IsNullOrEmpty(Column.IconClassName))
                    {
                        <Icon IconName=@Column.IconName ClassName=@Column.IconClassName />
                    }
                    @if (!string.IsNullOrEmpty(Column.IconSrc))
                    {
                        <Icon IconSrc=@Column.IconSrc ClassName=@Column.IconClassName />
                    }
                    @if (Column.IsIconOnly)
                    {
                        <span class="ms-DetailsColumn-accessibleLabel">@Column.Name</span>
                    }
                    else
                    {
                        @Column.Name
                    }
                </span>
                @if (Column.IsFiltered)
                {

                    <Icon IconName="Filter" ClassName="ms-DetailsColumn-nearIcon" />
                }
                @if (Column.IsSorted)
                {
                    <Icon IconName=@(Column.IsSortedDescending ? "SortDown" : "SortUp") ClassName="ms-DetailsColumn-sortIcon" />
                }
                @if (Column.IsGrouped)
                {
                    <Icon IconName="GroupedDescending" ClassName="ms-DetailsColumn-nearIcon" />
                }
                @if (Column.ColumnActionsMode == ColumnActionsMode.HasDropdown && !Column.IsIconOnly)
                {
                    <Icon IconName="ChevronDown" AriaHidden="true" ClassName="ms-DetailsColumn-filterChevron" />
                }
            </span>
        </span>
    }
</div>
